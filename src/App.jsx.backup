import React from 'react'
import UserExperienceRouter from './components/UserExperienceRouter'

export default function App() {
  return <UserExperienceRouter />
}

  // Listen for test metadata viewer events (for development/testing)
  useEffect(() => {
    const handleTestMetadata = (event) => {
      setCurrentMetadata(event.detail)
      setMetadataViewerOpen(true)
    }
    
    window.addEventListener('openMetadataViewer', handleTestMetadata)
    return () => window.removeEventListener('openMetadataViewer', handleTestMetadata)
  }, [])

  // Handle data fetching completion
  const handleDataFetched = (data) => {
    setResults(data)
    setShowResults(true)
    setCurrentView('results')
    setError(null)
  }

  // Handle auth requirement
  const handleAuthRequired = () => {
    setAuthOpen(true)
  }

  // Handle back to workflow
  const handleBackToWorkflow = () => {
    setCurrentView('workflow')
    setShowResults(false)
  }

  return (
    <div className="app">
      {/* Enhanced Header */}
      <header className="app-header" style={{ 
        display: 'flex', 
        alignItems: 'center', 
        justifyContent: 'space-between', 
        padding: '16px 24px', 
        background: 'linear-gradient(135deg, #1a73e8, #34a853)',
        color: 'white',
        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
          <h1 style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>
            🛰️ NASA Earth Data Explorer
          </h1>
          <span style={{ 
            background: 'rgba(255,255,255,0.2)', 
            padding: '4px 12px', 
            borderRadius: '20px', 
            fontSize: '12px',
            fontWeight: '500'
          }}>
            Enhanced AI-Powered Analysis
          </span>
        </div>
        
        <nav style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>
          {currentView === 'results' && (
            <button 
              className="btn" 
              style={{ 
                background: 'rgba(255,255,255,0.2)', 
                border: '1px solid rgba(255,255,255,0.3)',
                color: 'white',
                padding: '8px 16px',
                borderRadius: '6px',
                fontWeight: 'bold'
              }}
              onClick={handleBackToWorkflow}
            >
              ← Back to Workflow
            </button>
          )}
          
          {currentMetadata && (
            <button 
              className="btn" 
              style={{ 
                background: '#10b981', 
                color: 'white',
                border: 'none',
                padding: '8px 16px',
                borderRadius: '6px',
                fontWeight: 'bold'
              }}
              onClick={() => setMetadataViewerOpen(true)}
            >
              📊 View Metadata
            </button>
          )}
          
          <button 
            className="btn" 
            onClick={() => setAuthOpen(true)}
            style={{
              background: user ? 'rgba(255,255,255,0.2)' : 'white',
              color: user ? 'white' : '#1a73e8',
              border: user ? '1px solid rgba(255,255,255,0.3)' : 'none',
              padding: '8px 16px',
              borderRadius: '6px',
              fontWeight: 'bold'
            }}
          >
            {user ? `👤 ${user.email.split('@')[0]}` : '🔐 Login / Register'}
          </button>
        </nav>
      </header>

      {/* Main Content */}
      <main style={{ minHeight: 'calc(100vh - 80px)' }}>
        {currentView === 'workflow' && (
          <MainWorkflow 
            user={user}
            onDataFetched={handleDataFetched}
            onAuthRequired={handleAuthRequired}
          />
        )}

        {currentView === 'results' && results && (
          <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
            {/* Results Header */}
            <div style={{ 
              display: 'flex', 
              alignItems: 'center', 
              justifyContent: 'space-between',
              marginBottom: '24px',
              padding: '20px',
              background: 'linear-gradient(135deg, #e8f5e8, #f3f8ff)',
              borderRadius: '12px',
              border: '1px solid #e1e5e9'
            }}>
              <div>
                <h2 style={{ fontSize: '24px', fontWeight: 'bold', margin: '0 0 8px 0', color: '#1a73e8' }}>
                  📊 Analysis Results
                </h2>
                <p style={{ fontSize: '14px', color: '#666', margin: 0 }}>
                  NASA Earth data analysis completed • {results.metadata?.usedAPIs?.length || 0} API sources
                </p>
              </div>
              <div style={{ display: 'flex', gap: '12px' }}>
                <ExportPanel data={results} user={user} />
              </div>
            </div>

            {/* Error Display */}
            {error && (
              <div style={{ marginBottom: '24px' }}>
                <ErrorDisplay 
                  error={error}
                  suggestions={[
                    'Try refreshing the page',
                    'Check your internet connection', 
                    'Verify your data selection parameters',
                    'Contact support if the issue persists'
                  ]}
                  onRetry={() => {
                    setError(null)
                    // Could trigger a retry of the last query here
                  }}
                  onDismiss={() => setError(null)}
                />
              </div>
            )}

            {/* Results Content */}
            {!loading && !error && results && (
              <div style={{ display: 'grid', gap: '24px' }}>
                <Charts data={results} />
                <ResultsSummary data={results} />
                
                {/* Data Quality & Insights */}
                {results.insights && results.insights.length > 0 && (
                  <div style={{
                    padding: '20px',
                    background: '#fff',
                    borderRadius: '12px',
                    border: '1px solid #e1e5e9',
                    boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
                  }}>
                    <h3 style={{ fontSize: '18px', fontWeight: 'bold', margin: '0 0 16px 0', color: '#1a73e8' }}>
                      🧠 Smart Insights
                    </h3>
                    <div style={{ display: 'grid', gap: '12px' }}>
                      {results.insights.map((insight, index) => (
                        <div key={index} style={{
                          padding: '12px 16px',
                          background: insight.type === 'warning' ? '#fff3cd' :
                                     insight.type === 'alert' ? '#f8d7da' :
                                     insight.type === 'positive' ? '#d4edda' : '#d1ecf1',
                          border: `1px solid ${
                            insight.type === 'warning' ? '#ffeaa7' :
                            insight.type === 'alert' ? '#f5c6cb' :
                            insight.type === 'positive' ? '#c3e6cb' : '#bee5eb'
                          }`,
                          borderRadius: '8px',
                          borderLeft: `4px solid ${
                            insight.type === 'warning' ? '#ffc107' :
                            insight.type === 'alert' ? '#dc3545' :
                            insight.type === 'positive' ? '#28a745' : '#17a2b8'
                          }`
                        }}>
                          <div style={{ fontWeight: 'bold', marginBottom: '4px', fontSize: '14px' }}>
                            {insight.title}
                          </div>
                          <div style={{ fontSize: '13px', color: '#666' }}>
                            {insight.message}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        {/* Loading State for Results */}
        {loading && currentView === 'results' && (
          <div style={{
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            minHeight: '400px',
            flexDirection: 'column',
            gap: '16px'
          }}>
            <div style={{
              width: '50px',
              height: '50px',
              border: '5px solid #e3f2fd',
              borderTop: '5px solid #1976d2',
              borderRadius: '50%',
              animation: 'spin 1s linear infinite'
            }} />
            <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#1976d2' }}>
              Processing NASA Earth Data...
            </div>
          </div>
        )}
      </main>

      {/* Modals */}
      {authOpen && (
        <div style={{ 
          position: 'fixed', 
          left: 0, 
          top: 0, 
          right: 0, 
          bottom: 0, 
          background: 'rgba(0,0,0,0.5)', 
          display: 'flex', 
          alignItems: 'center', 
          justifyContent: 'center', 
          zIndex: 1000 
        }} onClick={() => setAuthOpen(false)}>
          <div style={{ 
            width: '480px', 
            background: '#fff', 
            padding: '24px', 
            borderRadius: '12px',
            boxShadow: '0 10px 30px rgba(0,0,0,0.3)'
          }} onClick={e => e.stopPropagation()}>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>
              <h3 style={{ margin: 0, fontSize: '20px', fontWeight: 'bold', color: '#1a73e8' }}>
                Account Management
              </h3>
              <button 
                style={{ 
                  background: 'none', 
                  border: 'none', 
                  fontSize: '20px', 
                  cursor: 'pointer',
                  padding: '4px'
                }} 
                onClick={() => setAuthOpen(false)}
              >
                ✕
              </button>
            </div>
            <Auth user={user} setUser={setUser} />
          </div>
        </div>
      )}

      {metadataViewerOpen && (
        <MetadataViewer 
          metadata={currentMetadata} 
          onClose={() => setMetadataViewerOpen(false)} 
        />
      )}

      {/* CSS Animations */}
      <style jsx="true">{`
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `}</style>
    </div>
  )
}
